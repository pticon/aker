# Sample configuration file for aker.
#
# aker will reload the configuration file if it receives a HUP
# signal.
#
# There *could* be a global "options" section in order to
# overwrite the default values.
#
# Then, you could define your directives in order to open or
# close your port for the given IP.
#
# Here is the magic token:
# - %IP% : the source IP responsible for completed sequence
#
# Default values for [options] sections :
# - pidfile = /var/run/aker.pid -- file where to write the PID
# - logfile = /var/log/aker.log -- file where to write logs
# - interface = eth0            -- interface where to listen to
# - ipaddr =                    -- IP address where to listen to
# - startcmd                    -- command to execute at first
# - stopcmd                     -- command to execute when leaving
#
# Default values for the other sections :
# - timeout = 5
# You could define up to 32 values in a given sequence.
# - flags should be syn, rst, fin, ack, psh, urg or udp
# and comma separated (without space).
# - sequence should be a CSV of port number. Each port
# could have an optional suffix which indicates the
# flags for this given port. Example: 12345:syn/ack
#
# Comment *must* start by '#' or ';'.
#
# Spaces or tab before section, key or value are stripped.
#

[options]
	pidfile = /var/run/aker.pid
	logfile = /var/log/aker.log
	ipaddr = 192.168.100.10
	interface = eth0
	startcmd = /sbin/iptables -A INPUT -p tcp --dport 22 -j DROP -m comment --comment "aker: startcmd"
	stopcmd = /sbin/iptables -D INPUT -p tcp --dport 22 -j DROP

# A directive to allow a SSH connection
[openssh]
	sequence = 12345,23456,34567
	timeout = 5
	command = /sbin/iptables -I INPUT -s %IP% -p tcp --dport 22 -j ACCEPT -m comment --comment "aker: openssh"
	flags = syn

# An other directive to remove the previous one
[closessh]
	sequence = 34567,23456,12345
	timeout = 5
	command = /sbin/iptables -D INPUT -s %IP% -p tcp --dport 22 -j ACCEPT
	flags = syn
